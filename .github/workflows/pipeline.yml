name: DevOps Demo Pipeline

on:
  push:
    branches: [ docker-demo, develop ]

jobs:
  pipeline:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout –∫–æ–¥
      uses: actions/checkout@v4
      
    - name: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
      run: |
        echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–∞ GitHub runner..."
        ./test.sh
    
    - name: Build Docker image
      run: |
        echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
        docker build -t ghcr.io/${{ github.repository_owner }}/devops-demo-website:latest .
        docker tag ghcr.io/${{ github.repository_owner }}/devops-demo-website:latest ghcr.io/${{ github.repository_owner }}/devops-demo-website:${{ github.sha }}
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Push Docker image
      run: |
        echo "üì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ registry..."
        docker push ghcr.io/${{ github.repository_owner }}/devops-demo-website:latest
        docker push ghcr.io/${{ github.repository_owner }}/devops-demo-website:${{ github.sha }}
    
    - name: Setup SSH Agent
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Setup Docker environment with Ansible
      run: |
        echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker —á–µ—Ä–µ–∑ Ansible..."
        cd ansible
        ansible-playbook setup.yml
    
    - name: –ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è
      env:
        DEPLOY_HOST: ${{ vars.DEPLOY_HOST }}
        DEPLOY_USER: ${{ vars.DEPLOY_USER }}
        DEPLOY_PORT: ${{ vars.DEPLOY_PORT }}
      run: |
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø–æ –≤–µ—Ç–∫–µ
        if [ "${{ github.ref_name }}" = "develop" ]; then
          DEPLOY_ENV="develop"
          echo "üß™ –î–µ–ø–ª–æ–π –≤ –¢–ï–°–¢–û–í–û–ï –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
        else
          DEPLOY_ENV="production"
          echo "üè≠ –î–µ–ø–ª–æ–π –≤ –ü–†–û–î–ê–ö–®–ù –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
        fi
        
        echo "üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è —á–µ—Ä–µ–∑ Ansible..."
        cd ansible
        ansible-playbook deploy.yml -e deploy_env=$DEPLOY_ENV